app: auth-service-cognito
service: auth-service-cognito
frameworkVersion: "3"
useDotenv: true

plugins:
  - serverless-offline
  - serverless-plugin-typescript

custom:
  serverless-offline:
    httpPort: 3001
  CLIENTES_POOL_ID: ${ssm:/fiap-tech/cognito/client/user-pool/id}
  CLIENTES_POOL_CLIENT_ID: ${ssm:/fiap-tech/cognito/client/user-pool/client-id}
  CLIENTES_IDENTITY_POOL_ID: ${ssm:/fiap-tech/cognito/client/client-identity-pool/id}
  COGNITO_REGION: ${ssm:/fiap-tech/cognito/region}
  API_GATEWAY_API_ID: ${ssm:/fiap-tech/api_gateway/api_id}
  SQS_NOTIFICATION: ${ssm:/fiap-tech/sqs/arn}

provider:
  name: aws
  runtime: nodejs18.x
  timeout: 30
  region: us-east-1
  stage: dev
  httpApi:
    id: ${self:custom.API_GATEWAY_API_ID}
  environment:
    CLIENTES_POOL_ID: ${self:custom.CLIENTES_POOL_ID}
    CLIENTES_POOL_CLIENT_ID: ${self:custom.CLIENTES_POOL_CLIENT_ID}
    CLIENTES_IDENTITY_POOL_ID: ${self:custom.CLIENTES_IDENTITY_POOL_ID}
    SQS_NOTIFICATION: ${self:custom.SQS_NOTIFICATION}
    EMAIL_HOST: ${env:EMAIL_HOST}
    EMAIL_FROM: ${env:EMAIL_FROM}
    EMAIL_USER: ${env:EMAIL_USER}
    EMAIL_PASS: ${env:EMAIL_PASS}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - cognito-idp:*
      Resource: "*"

package:
  excludeDevDependencies: true

functions:
  authorization:
    handler: src/functions/auth/auth.handler
  signInClient:
    handler: src/functions/auth/signInClient.handler
    events:
      - httpApi:
          path: /login
          method: post

  notification:
    handler: src/functions/notificacao/sendEmail.handler
    events:	
      - sqs: ${self:custom.SQS_NOTIFICATION}